// Code generated by re2c, DO NOT EDIT.
//line "go/submatch/03_posix.re":1
//go:generate re2go $INPUT -o $OUTPUT
package main

import "errors"

//line "go/submatch/03_posix.go":9
var YYMAXNMATCH int = 5
//line "go/submatch/03_posix.re":6


var eBadIP error = errors.New("bad IP")

func lex(str string) (int, error) {
	var cursor, marker, yynmatch int
	yypmatch := make([]int, YYMAXNMATCH*2)
	
//line "go/submatch/03_posix.go":20
	var yyt1 int
	var yyt2 int
	var yyt3 int
	var yyt4 int
//line "go/submatch/03_posix.re":13


	num := func(pos int, end int) int {
		n := 0
		for ; pos < end; pos++ {
			n = n*10 + int(str[pos]-'0')
		}
		return n
	}

	
//line "go/submatch/03_posix.go":37
{
	var yych byte
	yych = str[cursor]
	switch (yych) {
	case '0':
		yyt1 = cursor
		goto yy3
	case '1':
		yyt1 = cursor
		goto yy4
	case '2':
		yyt1 = cursor
		goto yy5
	case '3','4','5','6','7','8','9':
		yyt1 = cursor
		goto yy6
	default:
		goto yy1
	}
yy1:
	cursor += 1
yy2:
//line "go/submatch/03_posix.re":48
	{ return 0, eBadIP }
//line "go/submatch/03_posix.go":62
yy3:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	default:
		goto yy2
	}
yy4:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy9
	default:
		goto yy2
	}
yy5:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	case '0','1','2','3','4':
		goto yy9
	case '5':
		goto yy10
	case '6','7','8','9':
		goto yy11
	default:
		goto yy2
	}
yy6:
	cursor += 1
	marker = cursor
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy11
	default:
		goto yy2
	}
yy7:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '0':
		yyt2 = cursor
		goto yy12
	case '1':
		yyt2 = cursor
		goto yy13
	case '2':
		yyt2 = cursor
		goto yy14
	case '3','4','5','6','7','8','9':
		yyt2 = cursor
		goto yy15
	default:
		goto yy8
	}
yy8:
	cursor = marker
	goto yy2
yy9:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy11
	default:
		goto yy8
	}
yy10:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	case '0','1','2','3','4','5':
		goto yy11
	default:
		goto yy8
	}
yy11:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy7
	default:
		goto yy8
	}
yy12:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy16
	default:
		goto yy8
	}
yy13:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy16
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy15
	default:
		goto yy8
	}
yy14:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy16
	case '0','1','2','3','4':
		goto yy15
	case '5':
		goto yy17
	case '6','7','8','9':
		goto yy12
	default:
		goto yy8
	}
yy15:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy16
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy12
	default:
		goto yy8
	}
yy16:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '0':
		yyt3 = cursor
		goto yy18
	case '1':
		yyt3 = cursor
		goto yy19
	case '2':
		yyt3 = cursor
		goto yy20
	case '3','4','5','6','7','8','9':
		yyt3 = cursor
		goto yy21
	default:
		goto yy8
	}
yy17:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy16
	case '0','1','2','3','4','5':
		goto yy12
	default:
		goto yy8
	}
yy18:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy22
	default:
		goto yy8
	}
yy19:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy22
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy21
	default:
		goto yy8
	}
yy20:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy22
	case '0','1','2','3','4':
		goto yy21
	case '5':
		goto yy23
	case '6','7','8','9':
		goto yy18
	default:
		goto yy8
	}
yy21:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy22
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy18
	default:
		goto yy8
	}
yy22:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '0':
		yyt4 = cursor
		goto yy24
	case '1':
		yyt4 = cursor
		goto yy25
	case '2':
		yyt4 = cursor
		goto yy26
	case '3','4','5','6','7','8','9':
		yyt4 = cursor
		goto yy27
	default:
		goto yy8
	}
yy23:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case '.':
		goto yy22
	case '0','1','2','3','4','5':
		goto yy18
	default:
		goto yy8
	}
yy24:
	cursor += 1
	yych = str[cursor]
	if (yych <= 0x00) {
		goto yy28
	}
	goto yy8
yy25:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy28
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy27
	default:
		goto yy8
	}
yy26:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy28
	case '0','1','2','3','4':
		goto yy27
	case '5':
		goto yy29
	case '6','7','8','9':
		goto yy24
	default:
		goto yy8
	}
yy27:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy28
	case '0','1','2','3','4','5','6','7','8','9':
		goto yy24
	default:
		goto yy8
	}
yy28:
	cursor += 1
	yynmatch = 5
	yypmatch[2] = yyt1
	yypmatch[4] = yyt2
	yypmatch[6] = yyt3
	yypmatch[8] = yyt4
	yypmatch[0] = yyt1
	yypmatch[1] = cursor
	yypmatch[3] = yyt2
	yypmatch[3] += -1
	yypmatch[5] = yyt3
	yypmatch[5] += -1
	yypmatch[7] = yyt4
	yypmatch[7] += -1
	yypmatch[9] = cursor
	yypmatch[9] += -1
//line "go/submatch/03_posix.re":39
	{
			if yynmatch != 5 {
				panic("expected 5 submatch groups")
			}
			return num(yypmatch[8], yypmatch[9])+
				(num(yypmatch[6], yypmatch[7]) << 8)+
				(num(yypmatch[4], yypmatch[5]) << 16)+
				(num(yypmatch[2], yypmatch[3]) << 24), nil
		}
//line "go/submatch/03_posix.go":389
yy29:
	cursor += 1
	yych = str[cursor]
	switch (yych) {
	case 0x00:
		goto yy28
	case '0','1','2','3','4','5':
		goto yy24
	default:
		goto yy8
	}
}
//line "go/submatch/03_posix.re":49

}

func main() {
	test := func(str string, res int, err error) {
		if r, e := lex(str); !(r == res && e == err) {
			panic("error")
		}
	}
	test("1.2.3.4\000", 0x01020304, nil)
	test("127.0.0.1\000", 0x7f000001, nil)
	test("255.255.255.255\000", 0xffffffff, nil)
	test("1.2.3.\000", 0, eBadIP)
	test("1.2.3.256\000", 0, eBadIP)
}

/* Generated by re2c */
// re2rust $INPUT -o $OUTPUT

fn lex(s: &[u8]) -> bool {                            // Rust code
    let mut cursor = 0;                               //

{
	let mut yych : u8 = 0;
	let mut yystate : usize = 0;
	loop {
		match yystate {
			0 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				cursor += 1;
				match yych {
					0x41 ..= 0x5A |
					0x61 ..= 0x7A => {
						yystate = 3;
						continue;
					}
					_ => {
						yystate = 1;
						continue;
					}
				}
			}
			1 => {
				yystate = 2;
				continue;
			}
			2 => {
				{ return false; }
			}
			3 => {
				yych = unsafe {*s.get_unchecked(cursor)};
				yystate = 4;
				continue;
			}
			4 => {
				match yych {
					0x30 ..= 0x39 |
					0x41 ..= 0x5A |
					0x61 ..= 0x7A => {
						cursor += 1;
						yystate = 3;
						continue;
					}
					_ => {
						yystate = 5;
						continue;
					}
				}
			}
			5 => {
				{ return true; }
			}
			_ => {
				panic!("internal lexer error")
			}
		}
	}
}

}                                                     //
                                                      //
fn main() {                                           // Rust code
    assert!(lex(b"qwerty42\0"));                      //
}                                                     //
